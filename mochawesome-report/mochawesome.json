{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-30T10:01:28.367Z",
    "end": "2025-10-30T10:01:30.435Z",
    "duration": 2068,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f5bd10a3-0c68-43d6-b14a-90d5dcdd2f75",
      "title": "",
      "fullFile": "D:\\QA_Bootcamp\\Tugas Sesi 10\\WebAutomation\\tests\\sesi11.js",
      "file": "\\tests\\sesi11.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e614510-56e2-4790-b6bf-18a37bf86a84",
          "title": "Google Search Test",
          "fullFile": "D:\\QA_Bootcamp\\Tugas Sesi 10\\WebAutomation\\tests\\sesi11.js",
          "file": "\\tests\\sesi11.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Google Search Test\"",
              "fullTitle": "Google Search Test \"after each\" hook in \"Google Search Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed') {\n    let ss_full = await driver.takeScreenshot();\n    fs.writeFileSync(\"ss failed: \" + this.currentTest.title + \".png\", Buffer.from(ss_full, \"base64\")); // Or your desired path\n}",
              "err": {},
              "uuid": "7d00df48-81e5-4310-b579-4c288fb83da6",
              "parentUUID": "8e614510-56e2-4790-b6bf-18a37bf86a84",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Cek Visual halaman login",
              "fullTitle": "Google Search Test Cek Visual halaman login",
              "timedOut": false,
              "duration": 2064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// visit page\ndriver = await new Builder().forBrowser('chrome').build();\nawait driver.get('https://www.saucedemo.com');\nconst title = await driver.getTitle();\nassert.strictEqual(title, 'Swag Labs');\n// screenshot keadaan login page sekarang, current.png\nlet screenshot = await driver.takeScreenshot();\nlet imgBuffer = Buffer.from(screenshot, \"base64\");\nfs.writeFileSync(\"current.png\", imgBuffer);\n// ambil baseline untuk komparasi\n// jika belum ada baseline, jadikan current.png sebagai baseline\nif (!fs.existsSync(\"baseline.png\")) {\n    fs.copyFileSync(\"current.png\", \"baseline.png\");\n    console.log(\"Baseline image saved.\");\n}\n// Compare baseline.png dan current.png apakah sama\nlet img1 = PNG.sync.read(fs.readFileSync(\"baseline.png\"));\nlet img2 = PNG.sync.read(fs.readFileSync(\"current.png\"));\nlet { width, height } = img1;\nlet diff = new PNG({ width, height });\nlet numDiffPixels = pixelmatch(img1.data, img2.data, diff.data, width, height, { threshold: 0.1 });\nfs.writeFileSync(\"diff.png\", PNG.sync.write(diff));\nif (numDiffPixels > 0) {\n    console.log(`Visual differences found! Pixels different: ${numDiffPixels}`);\n} else {\n    console.log(\"No visual differences found.\");\n}\nassert.strictEqual(numDiffPixels, 0, \"Tidak ada perbedaan visual antara baseline dan current\");\ndriver.quit()",
              "err": {},
              "uuid": "f22a8f5a-82b2-4aca-bed9-2d8e5837a494",
              "parentUUID": "8e614510-56e2-4790-b6bf-18a37bf86a84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f22a8f5a-82b2-4aca-bed9-2d8e5837a494"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2064,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": null,
      "version": "6.3.0"
    }
  }
}